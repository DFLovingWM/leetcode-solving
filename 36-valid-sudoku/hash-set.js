/**
 * 用Set记录出现过的数字：检查每一个格子
 * 
 * 时间：O(N^2)
 * 空间：O(N)
 */
var isValidSudoku = function(board) {
  const [R, C] = [board.length, board[0].length]
  const SUB_DIMEN = Math.floor(Math.sqrt(R))

  const rowSets = Array.from({ length: R }, () => new Set())
  const colSets = Array.from({ length: C }, () => new Set())
  const subboardSets = Array.from({ length: C }, () => new Set())

  for (let i = 0; i < R; ++i) {
    for (let j = 0; j < C; ++j) {
      const value = board[i][j]
      if (value === '.') continue
      const si = Math.floor(i / SUB_DIMEN) * SUB_DIMEN + Math.floor(j / SUB_DIMEN)
      if (rowSets[i].has(value) || colSets[j].has(value) || subboardSets[si].has(value)) {
        return false
      }
      rowSets[i].add(value)
      colSets[j].add(value)
      subboardSets[si].add(value)
    }
  }

  return true
};

[
  [
    ["5", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"]
  ],
  [
    ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"]
  ],
  [
    [".", ".", ".", ".", "5", ".", ".", "1", "."], 
    [".", "4", ".", "3", ".", ".", ".", ".", "."], 
    [".", ".", ".", ".", ".", "3", ".", ".", "1"], 
    ["8", ".", ".", ".", ".", ".", ".", "2", "."], 
    [".", ".", "2", ".", "7", ".", ".", ".", "."], 
    [".", "1", "5", ".", ".", ".", ".", ".", "."], 
    [".", ".", ".", ".", ".", "2", ".", ".", "."], 
    [".", "2", ".", "9", ".", ".", ".", ".", "."], 
    [".", ".", "4", ".", ".", ".", ".", ".", "."]
  ],
].forEach(board => {
  console.log(isValidSudoku(board))
})